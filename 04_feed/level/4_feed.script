local level_settings = {
	[1] = {
		duration = 5,
		required_ratio = 0.7
	},
	[2] = {
		duration = 20,
		required_ratio = 0.95
	}
}

function init(self)
	msg.post("main:/background", "set_background", { color = vmath.vector4(0.52, 0.40, 0.40, 0), sprite = "#sprite-game" } )
	msg.post("/intro#intro", "start", { text = "Nourris !" })
	msg.post(".", "acquire_input_focus")

	self.won_level = false
	self.score = 0
	self.food_amount = 0
end

local function init_level(self, difficulty)
	self.difficulty_settings = level_settings[difficulty]
	msg.post("dog-food-bag", "set_difficulty", { difficulty = difficulty })
end

function on_message(self, message_id, message, sender)
	if message_id == hash("init_level") then
		init_level(self, message.difficulty)
	elseif message_id == hash("intro_end") then
		msg.post("timer", "start", { duration = self.difficulty_settings.duration })
		msg.post("dog-food-bag", "start_spawn_food")
		timer.delay(self.difficulty_settings.duration - 1.5, false, function()
			msg.post("dog-food-bag", "stop_spawn_food")
		end)
	elseif message_id == hash("food_spawned") then
		self.food_amount = self.food_amount + 1
	elseif message_id == hash("add_score") then
		self.score = self.score + 1
	elseif message_id == hash("timer_end") then
		if self.score > self.food_amount * self.difficulty_settings.required_ratio then
			self.won_level = true
			sprite.play_flipbook("dog-bowl#sprite", hash("dog-bowl-full"))
		else
			-- TODO lost animation
		end
		msg.post("outro", "start")
	elseif message_id == hash("outro_end") then
		msg.post("main:/loader#loader", "level_finished", { won_level = self.won_level })
	end
end

function on_input(self, action_id, action)
	if action_id == hash("click") then
		local x = action.x
		msg.post("dog-bowl", "move", { x = x })
		return true
	end
	return false
end
