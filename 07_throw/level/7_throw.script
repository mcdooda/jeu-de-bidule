local difficulty_settings = {
	[1] = {
		duration = 5
	},
	[2] = {
		duration = 2
	}
}

local num_difficulty_levels = #difficulty_settings

local function throw_toy(self)
	local force = vmath.vector3()
	local duration = self.released.time - self.pressed.time
	local force_multiplier = 3000
	force.x = ((self.released.position.x - self.pressed.position.x) / duration) * force_multiplier
	force.y = ((self.released.position.y - self.pressed.position.y) / duration) * force_multiplier
	force.z = 0

	local toy_position = go.get_position("sheep-toy")
	local position_distance = 6
	local position = toy_position + vmath.normalize(self.pressed.position - toy_position) * position_distance
	
	msg.post("sheep-toy#collision", "apply_force", { force = force, position = position })

	self.toy_thrown = vmath.length(force) > 0
	self.toy_stopped = false
end

function init(self)
	msg.post("/intro#intro", "start", { text = "Lance !" })

	self.won_level = false
	self.time = 0
	self.pressed = {
		position = nil,
		time = nil
	}
	self.released = {
		position = nil,
		time = nil
	}
	self.toy_thrown = false
	self.toy_stopped = false
	self.toy_previous_position = go.get_position("sheep-toy")
	self.toy_inside_target_area = false

	for i = 1, num_difficulty_levels do
		msg.post("target-area-" .. tostring(i), "disable")
	end
end

local function init_level(self, difficulty)
	self.difficulty_settings = difficulty_settings[difficulty]
	msg.post("target-area-" .. tostring(difficulty), "enable")
end

function update(self, dt)
	self.time = self.time + dt
	local toy_position = go.get_position("sheep-toy")
	local toy_velocity = (toy_position - self.toy_previous_position) * (1 / dt)
	self.toy_previous_position = vmath.vector3(toy_position)
	if self.toy_thrown and not self.toy_stopped then
		local toy_speed = vmath.length(toy_velocity)
		self.toy_stopped = toy_speed > 0 and toy_speed < 5
		if self.toy_stopped then
			msg.post(".", "toy_stopped")
		end
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("init_level") then
		init_level(self, message.difficulty)
	elseif message_id == hash("intro_end") then
		msg.post(".", "acquire_input_focus")
		msg.post("timer", "start", { duration = self.difficulty_settings.duration })
	elseif message_id == hash("target_area_trigger") then
		self.toy_inside_target_area = message.enter
	elseif message_id == hash("toy_stopped") then
		for i = 1, num_difficulty_levels do
			msg.post("target-area-" .. tostring(i), "disable")
		end
		msg.post("sheep-toy#collision", "disable")
		local toy_position = go.get_position("sheep-toy")
		local dog_z = go.get_position("dog-throw").z
		local destination
		local animation
		if self.toy_inside_target_area then
			self.won_level = true
			destination = vmath.vector3(toy_position.x, toy_position.y, dog_z)
			animation = hash("run")
		else
			sprite.set_hflip("dog-throw#sprite", true)
			destination = vmath.vector3(-150, 400, dog_z)
			animation = hash("idle")
		end
		sprite.play_flipbook("dog-throw#sprite", animation)
		go.animate("dog-throw", "position", go.PLAYBACK_ONCE_FORWARD, destination, go.EASING_LINEAR, 2, 0, function()
			sprite.play_flipbook("dog-throw#sprite", "sit")
		end)
		msg.post("outro", "start")
	elseif message_id == hash("timer_end") then
		msg.post(".", "release_input_focus")
		if not self.toy_thrown then
			msg.post(".", "toy_stopped")
		end
	elseif message_id == hash("outro_end") then
		msg.post("main:/loader#loader", "level_finished", { won_level = self.won_level })
	end
end

function on_input(self, action_id, action)
	if action_id == hash("click") then
		if action.pressed then
			self.pressed.position = vmath.vector3(action.x, action.y, 0)
			self.pressed.time = self.time
		elseif action.released then
			if self.pressed.time then
				self.released.position = vmath.vector3(action.x, action.y, 0)
				self.released.time = self.time
				throw_toy(self)
				msg.post(".", "release_input_focus")
			end
		end
		return true
	end
	return false
end
