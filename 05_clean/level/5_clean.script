local settings = require("00_common.modules.settings")

local screen_width = settings.screen_width
local screen_height = settings.screen_height
local margin = 20

local fur_amount = 100

local level_settings = {
	[1] = {
		required_clean_ratio = 0.6,
		spawn_hazard = function(self)

		end
	},
	[2] = {
		required_clean_ratio = 0.85,
		spawn_hazard = function(self)
			local position = vmath.vector3()
			local min_x = margin
			local max_x = screen_width - margin
			local min_y = 200
			local max_y = screen_height - margin
			local num_poops = 3
			for i = 1, num_poops do
				position.x = math.random(min_x, max_x)
				position.y = math.random(min_y, max_y)
				position.z = 0.6

				factory.create("#dog-poop-factory", position, nil, nil, 2)
			end
		end
	}
}

local function spawn_fur(self)
	local position = vmath.vector3()
	local min_x = margin
	local max_x = screen_width - margin
	local min_y = margin
	local max_y = screen_height - margin
	local min_z = 0.0
	local max_z = 0.5
	self.fur = {}
	for i = 1, fur_amount do
		position.x = math.random(min_x, max_x)
		position.y = math.random(min_y, max_y)
		position.z = vmath.lerp(i / fur_amount, min_z, max_z)

		local angle = math.pi * math.random()
		local rotation = vmath.quat_rotation_z(angle)
		
		local fur_hash = factory.create("#dog-fur-factory", position, rotation, nil, 2)
		self.fur[fur_hash] = true
	end
end

function init(self)
	msg.post("/intro#intro", "start", { text = "Nettoie !" })
	spawn_fur(self)

	self.won_level = false
	self.score = 0

	--msg.post("@system:", "toggle_physics_debug")
end

local function init_level(self, difficulty)
	self.difficulty_settings = level_settings[difficulty]
	self.difficulty_settings.spawn_hazard(self)
end

local function fade_fur(self)
	for fur_hash in pairs(self.fur) do
		local fur_sprite_url = msg.url(nil, fur_hash, "sprite")
		go.animate(fur_sprite_url, "tint.w", go.PLAYBACK_ONCE_FORWARD, 0, go.EASING_LINEAR, 0.3)
	end
end

local function spawn_sparkes(self)
	local num_sparkles = 30
	local min_x = margin
	local max_x = screen_width - margin
	local min_y = margin
	local max_y = screen_height - margin
	local min_z = 0.0
	local max_z = 0.5
	local position = vmath.vector3()
	for i = 1, num_sparkles do
		position.x = math.random(min_x, max_x)
		position.y = math.random(min_y, max_y)
		position.z = vmath.lerp(i / num_sparkles, min_z, max_z)

		local fur_hash = factory.create("#sparkles-factory", position, nil, nil, 2)
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("init_level") then
		init_level(self, message.difficulty)
	elseif message_id == hash("intro_end") then
		msg.post(".", "acquire_input_focus")
		msg.post("timer", "start", { duration = 5 })
	elseif message_id == hash("add_score") then
		self.score = self.score + 1
		self.fur[message.fur_hash] = nil
	elseif message_id == hash("timer_end") then
		msg.post(".", "release_input_focus")
		print(self.score / fur_amount)
		if self.score > fur_amount * self.difficulty_settings.required_clean_ratio then
			self.won_level = true
			fade_fur(self)
			spawn_sparkes(self)
		else
			msg.post("robot-vacuum", "stop_move_smoke")
		end
		msg.post("outro", "start")
	elseif message_id == hash("outro_end") then
		msg.post("main:/loader#loader", "level_finished", { won_level = self.won_level })
	end
end

function on_input(self, action_id, action)
	if action_id == hash("click") then
		if not action.released then
			msg.post("robot-vacuum", "move_towards", { x = action.x, y = action.y })
		else
			msg.post("robot-vacuum", "stop_move")
		end
		return true
	end
	return false
end
